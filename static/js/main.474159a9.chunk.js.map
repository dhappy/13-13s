{"version":3,"sources":["Lists.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useState","data","setData","useImmer","axes","setAxes","dynAxes","setDynAxes","dragStart","setDragStart","dragOver","setDragOver","height","setHeight","sortOn","setSortOn","sortAsc","setSortAsc","src","realms","projects","months","details","useEffect","a","sources","Object","Promise","all","map","filename","fetch","res","text","body","JSON5","parse","fromEntries","groups","values","reduce","acc","vals","Math","max","length","load","SortOn","column","props","sort","seen","orig","sorted","keys","reverse","idxs","entry","indexOf","undefined","entries","forEach","type","idx","align","title","opacity","onClick","m","p","cursor","lineHeight","x","hold","y","mx","textAlign","href","isExternal","textDecoration","ml","_hover","borderBottom","isolation","templateColumns","MaybeTooltip","label","children","includes","display","gridColumn","gridRow","mb","fontSize","textTransform","Array","from","_","iidx","mixBlendMode","px","py","whiteSpace","mt","draggable","bg","colors","toLowerCase","onDragStart","onDragEnd","onDragEnter","onDragLeave","json","Blob","stringify","window","open","URL","createObjectURL","justify","Lists","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.474159a9.chunk.js","sourcesContent":["import { ReactElement, useEffect, useState } from 'react'\nimport {\n  Box, Button, Grid, GridItem, Heading, Link, Stack,\n  StackProps, Text, Tooltip,\n} from '@chakra-ui/react'\nimport { useImmer } from 'use-immer'\nimport JSON5 from 'json5'\n\ninterface Point {\n  x: number\n  y: number\n}\n\ninterface Data {\n  groups?: Array<Record<string, string>>\n  colors?: Record<string, string>\n  realms?: Record<string, string>\n  projects?: Record<string, string>\n  months?: Record<string, string>\n}\n\ninterface TooltipProps {\n  label: string\n  children: ReactElement | ReactElement[] | string\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n  const [data, setData] = useState<Data>({})\n  const [axes, setAxes] = (\n    useImmer<Record<string, string[]>>({})\n  )\n  const [dynAxes, setDynAxes] = (\n    useImmer<Record<string, string[]>>({})\n  )\n  const [dragStart, setDragStart] = (\n    useState<Point | null>(null)\n  )\n  const [dragOver, setDragOver] = (\n    useState<Point | null>(null)\n  )\n  const [height, setHeight] = useState(0)\n  const [sortOn, setSortOn] = useState('months')\n  const [sortAsc, setSortAsc] = useState(false)\n  const src = dragStart ? dynAxes : axes\n  const { realms = {}, projects = {}, months = {} } = data\n  const details: Record<string, Record<string, string>> = {\n    realms, projects, months,\n  }\n\n  useEffect(() => {\n    const load = async () => {\n      const sources = [\n        'groups', 'colors', 'realms', 'projects', 'months',\n      ]\n      const data = Object.fromEntries(\n        await Promise.all(sources.map(\n          async (src) => {\n            const filename = `${src}.json5`\n            let body\n            try {\n              const res = await fetch(filename)\n              body = await res.text()\n              return [src, JSON5.parse(body)]\n            } catch(error) {\n              return [src, null]\n            }\n          }\n        ))\n      )\n\n      setData(data)\n      setAxes(data.groups)\n      setDynAxes(data.groups)\n      setHeight(\n        Object.values(data.groups).reduce(\n          (acc, vals) => Math.max(\n            acc as number,\n            (vals as Array<unknown>).length\n          ),\n          0,\n        ) as number\n      )\n    }\n    load()\n  }, [setAxes, setDynAxes])\n\n  const download = () => {\n    const json = new Blob(\n      [JSON5.stringify(axes, null, 2)],\n      { type: 'application/json5' }\n    )\n    window.open(URL.createObjectURL(json))\n  }\n\n  const SortOn = ({ column, ...props }: StackProps & { column: string }) => {\n    const sort = (sortAsc = true) => {\n      setSortAsc(sortAsc)\n      setSortOn(column)\n      setDynAxes((axes) => {\n        const seen: Record<string, number> = {}\n        const orig = [...axes[column]]\n        let sorted = [...axes[column]].sort()\n        if(column === 'months') {\n          sorted = Object.keys(data.months ?? {}) // unicode sort order misplaces ⛎\n        }\n        if(sortAsc) {\n          sorted = sorted.reverse()\n        }\n        const idxs = sorted.map((entry) => (\n          seen[entry] = orig.indexOf(\n            entry, seen[entry] === undefined ? 0 : seen[entry] + 1\n          )\n        ))\n        Object.entries(axes).forEach(([type, entries]) => {\n          axes[type] = idxs.map((idx) => entries[idx])\n        })\n      })\n    }\n    return (\n      <Stack align=\"center\" {...props}>\n        <Box\n          title={`Sort on ${column} ascending`}\n          opacity={sortOn === column && sortAsc ? 1 : 0.5}\n          onClick={() => sort(true)}\n          m={0} p={0} cursor=\"n-resize\"\n          lineHeight={0.75}\n        >▴</Box>\n        <Box\n          title={`Sort on ${column} descending`}\n          opacity={sortOn === column && !sortAsc ? 1 : 0.5}\n          onClick={() => sort(false)}\n          m=\"0 !important\" p={0} cursor=\"s-resize\"\n          lineHeight={0.75}\n        >▾</Box>\n      </Stack>\n    )\n  }\n\n  useEffect(() => {\n    if(!dragStart) {\n      setAxes(dynAxes)\n    } else if(dragStart.x === dragOver?.x) {\n      setDynAxes((dynAxes) => {\n        const orig = [...Object.values(axes)[dragStart.x - 1]]\n        const hold = orig[dragStart.y - 1]\n        orig[dragStart.y - 1] = orig[dragOver.y - 1]\n        orig[dragOver.y - 1] = hold\n        dynAxes[Object.keys(dynAxes)[dragStart.x - 1]] = orig\n      })\n    }\n  }, [dragStart, dragOver, axes, dynAxes, setAxes, setDynAxes])\n\n  return (\n    <Stack mx={15}>\n      <Text textAlign=\"center\">\n        This interface is to align the 13 sets of 13 things that combine to form the 13 teams of\n        <Link\n          href=\"https://discord.gg/xuwe6rxAzg\" isExternal\n          textDecoration=\"underline\"\n          ml={1}\n          _hover={{ borderBottom: '1px dashed' }}\n        >Yggdrasil</Link>.\n      </Text>\n      <Grid\n        isolation=\"isolate\"\n        templateColumns={`repeat(${Object.keys(axes).length}, 0fr)`}\n      >\n        {Object.entries(src).map(([type, entries], idx) => {\n          let MaybeTooltip = ({ label = '', children }: TooltipProps) => (\n            <>{children}</>\n          )\n          if(Object.keys(details).includes(type)) {\n            MaybeTooltip = ({ label, children }: TooltipProps) => (\n              <Tooltip {...{ label }}>{children}</Tooltip>\n            )\n          }\n\n          return (\n            <Stack key={idx} display=\"contents\">\n              <GridItem gridColumn={idx + 1} gridRow={1}>\n                <Heading\n                  mx={2} mb={0} fontSize={20} textAlign=\"center\"\n                  textTransform=\"capitalize\"\n                >\n                  {type}\n                </Heading>\n                <SortOn column={type} m=\"0 !important\"/>\n              </GridItem>\n              {Array.from({ length: height }).map(\n                (_, iidx) => {\n                  const entry = entries[iidx]\n                  return (\n                    <GridItem\n                      mixBlendMode=\"color\"\n                      key={`${idx}:${iidx}`}\n                      px={5} py={1} whiteSpace=\"pre\" mt=\"0 !important\"\n                      gridColumn={idx + 1} gridRow={iidx + 2}\n                      draggable={true}\n                      bg={data?.colors?.[src.colors[iidx].toLowerCase()]}\n                      onDragStart={() => setDragStart({\n                        x: idx + 1, y: iidx + 1,\n                      })}\n                      onDragEnd={() => setDragStart(null)}\n                      onDragEnter={() => setDragOver({\n                        x: idx + 1, y: iidx + 1,\n                      })}\n                      onDragLeave={() => setDragOver(null)}\n                    >\n                      <MaybeTooltip label={details[type]?.[entry.toLowerCase()]}>\n                        {entry}\n                      </MaybeTooltip>\n                    </GridItem>\n                  )\n                }\n              )}\n            </Stack>\n          )\n        })}\n      </Grid>\n      <Button onClick={download} title=\"Download\">↯</Button>\n    </Stack>\n  )\n}\n","import React from 'react'\nimport { ChakraProvider, Flex } from '@chakra-ui/react'\nimport Lists from './Lists'\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => (\n  <ChakraProvider>\n    <Flex justify=\"center\">\n      <Lists/>\n    </Flex>\n  </ChakraProvider>\n)","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}